delete_file.jstest.jsreadwrite.jstest.txtwrite_file.jsread_file.jsreaddirs.jsdelete_file.jsfile.txtread_file.jsreadwrite.jstest.txtreaddirs.jstest.jswrite_file.jsvar fs = require('fs')
// 删除文件
fs.unlink('test1.txt',function(){
    console.log("删除文件")
})delete_file.jstest.jsreadwrite.jstest.txtwrite_file.jsread_file.jsreaddirs.jsdelete_file.jsfile.txtread_file.jsreadwrite.jstest.txtreaddirs.jstest.jswrite_file.jsvar fs = require('fs');
var {myRead,myWrite} = require('../文件操作/readwrite')
console.log(myRead)
fs.readdir('../文件操作',function(err,files){
    if(err){

    }else{
        files.forEach(async function(file,index){
            let content = await myRead(file)
            console.log(file)
            await myWrite('file.txt',content)
        })
    }
})let fs = require('fs')
// 异步写入
// fs.writeFile('test.txt','写入文件成功',{flags:'a+',encoding:'utf-8'},function (err){
//     if(err){
//         console.log(err)
//     }else{
//         console.log('写入成功')
//     }
// })

// 异步封装追加写入
function myWrite(path,content){
    return new Promise(function(resolve,reject){
        fs.appendFile(path,content,{flags:'a',encoding:'utf-8'},function (err){
            if(err){
                reject(err)
            }else{
                resolve('写入成功!!!')
            }
        })
    })
}


async function ms(){
    await myWrite('test.txt','下午好是1！');
    await myWrite('test.txt','下午好是2！');
    await myWrite('test.txt','下午好是3！');
    await myWrite('test.txt','下午好是4！');
}

ms()
下午好是4！下午好是1！下午好是2！下午好是3！下午好是4！下午好是1！下午好是2！下午好是3！下午好是4！下午好是1！下午好是2！下午好是3！下午好是4！下午好是1！下午好是2！下午好是3！下午好是4！下午好是1！下午好是2！下午好是3！下午好是4！下午好是1！下午好是2！下午好是3！下午好是4！下午好是1！下午好是2！下午好是3！下午好是4！下午好是1！下午好是2！下午好是3！下午好是4！下午好是1！下午好是2！下午好是3！下午好是4！下午好是1！下午好是2！下午好是3！下午好是4！下午好是1！下午好是2！下午好是3！下午好是4！下午好是1！下午好是2！下午好是3！下午好是4！下午好是1！下午好是2！下午好是3！下午好是4！下午好是1！下午好是2！下午好是3！下午好是4！let fs = require('fs')

//同步读取文件
// const rf = fs.readFileSync('test.txt',{flags:'r',encoding:'utf-8'})
// console.log(rf.toString())

//异步读取文件
// fs.readFile('test.txt',{flags:'r',encoding:'utf-8'},function (err,data){
//     if(err){
//         console.log(err)
//     }else{
//         console.log(data)
//     }
// })

//promise封装异步方式
function myRead(path){
    return new Promise(function(resolve,reject){
        fs.readFile(path,{flags:'r',encoding:'utf-8'},function (err,data){
            if(err){
                reject(err)
            }else{
                resolve(data)
            }
        })
    })
}

// const mf = myRead('test.txt')
// mf.then(function(res){
//     console.log(res)
// })


// //异步使用同步的方式读取多个文件
// async function List(){
    
//     const f1 = await myRead('test.txt')
//     const f2 = await myRead(f1+'.txt')
//     console.log(f2,111)
//     console.log(333)
// }

// List()

module.exports = {'myRead':myRead}function test1 () {
    return new Promise((resolve, reject) => {

        setTimeout(() => {

            resolve(1)

        }, 1000)

    })

}

function test2 () {

    return new Promise((resolve, reject) => {

        setTimeout(() => {

            resolve(2)

        }, 2000)

    })

}

async function exc1 () {

    console.log('exc1 start:',Date.now())

    let res1 = await test1();

    let res2 = await test2(); // 不依赖 res1 的值

    console.log('exc1 end:', Date.now())

}

async function exc2 () {

    console.log('exc2 start:',Date.now())

    let [res1, res2] = await Promise.all([test1(), test2()])

    console.log('exc2 end:', Date.now())

}

exc1();

exc2();let fs = require('fs')
function myRead(path){
    return new Promise(function(resolve,reject){
        fs.readFile(path,{flags:'r',encoding:'utf-8'},function (err,data){
            if(err){
                reject(err)
            }else{
                resolve(data)
            }
        })
    })
}

function myWrite(path,content){
    return new Promise(function(resolve,reject){
        fs.appendFile(path,content,{flags:'a',encoding:'utf-8'},function (err){
            if(err){
                reject(err)
            }else{
                resolve('写入成功!!!')
            }
        })
    })
}

module.exports = {myRead,myWrite}
